<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/PRAJOTH/Downloads/New Orders (2).db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="2941"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="147"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="170"/><column index="5" value="147"/><column index="6" value="105"/><column index="7" value="110"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="134"/><column index="2" value="61"/><column index="3" value="85"/><column index="4" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="163"/><column index="2" value="209"/><column index="3" value="208"/><column index="4" value="270"/><column index="5" value="208"/><column index="6" value="147"/><column index="7" value="300"/><column index="8" value="252"/><column index="9" value="222"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="122"/><column index="2" value="163"/><column index="4" value="176"/><column index="5" value="182"/><column index="6" value="175"/><column index="7" value="271"/><column index="8" value="141"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="122"/><column index="2" value="148"/><column index="3" value="229"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="148"/><column index="2" value="300"/><column index="3" value="255"/><column index="4" value="186"/><column index="5" value="300"/><column index="6" value="61"/><column index="7" value="85"/><column index="8" value="91"/><column index="9" value="97"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="255"/><column index="2" value="253"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SHIPPER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="141"/><column index="2" value="175"/><column index="3" value="186"/><column index="4" value="213"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- 1.	Write a query to Display the product details (product_class_code, product_id, product_desc, product_price,) as per the following criteria and sort them in descending order of category:
------ a.	If the category is 2050, increase the price by 2000
------ b.	If the category is 2051, increase the price by 500
-------c.	If the category is 2052, increase the price by 600.


SELECT PRODUCT_CLASS_CODE, PRODUCT_ID, PRODUCT_DESC, PRODUCT_PRICE,
CASE
WHEN PRODUCT_CLASS_CODE=2050 THEN PRODUCT_PRICE+2000
WHEN PRODUCT_CLASS_CODE=2051 THEN PRODUCT_PRICE+500
WHEN PRODUCT_CLASS_CODE=2052 THEN PRODUCT_PRICE+600
ELSE PRODUCT_PRICE
End NEW_PRICE
from PRODUCT
order by PRODUCT_CLASS_CODE DESC; 

==========================================================================================================================================================================================
---2.	Write a query to display (product_class_desc, product_id, product_desc, product_quantity_avail ) and Show inventory status of products as below as per their available quantity:
-----a.	For Electronics and Computer categories, if available quantity is &lt;= 10, show 'Low stock', 11 &lt;= qty &lt;= 30, show 'In stock', &gt;= 31, show 'Enough stock'
-----b.	For Stationery and Clothes categories, if qty &lt;= 20, show 'Low stock', 21 &lt;= qty &lt;= 80, show 'In stock', &gt;= 81, show 'Enough stock'
-----c.	Rest of the categories, if qty &lt;= 15 – 'Low Stock', 16 &lt;= qty &lt;= 50 – 'In Stock', &gt;= 51 – 'Enough stock'
-----For all categories, if available quantity is 0, show 'Out of stock'.



SELECT pr.PRODUCT_CLASS_DESC,p.product_id,p.product_desc,p.PRODUCT_QUANTITY_AVAIL,
CASE 
WHEN PRODUCT_CLASS_DESC IN ('Electronics','Computer' ) THEN (CASE 
                                                                 WHEN  PRODUCT_QUANTITY_AVAIL&lt;=10 THEN 'Low stock'	
                                                                 WHEN  PRODUCT_QUANTITY_AVAIL BETWEEN 11 and 30 then 'In stock'
                                                                 WHEN  PRODUCT_QUANTITY_AVAIL&gt;=31 THEN 'Enough  stock'
																 WHEN PRODUCT_QUANTITY_AVAIL=0 THEN 'Out of stock'
																 END
														     )	
WHEN PRODUCT_CLASS_DESC IN ('Stationery ','Clothes ' ) THEN (CASE 
                                                                 WHEN  PRODUCT_QUANTITY_AVAIL&lt;=20 THEN 'Low stock'	
                                                                 WHEN  PRODUCT_QUANTITY_AVAIL BETWEEN 21 and 80 THEN 'In stock'
                                                                 WHEN  PRODUCT_QUANTITY_AVAIL&gt;=81 THEN 'Enough  stock'
																 WHEN PRODUCT_QUANTITY_AVAIL=0 THEN 'Out of stock'
																 END
														     )
ELSE (CASE 
        WHEN  PRODUCT_QUANTITY_AVAIL&lt;=15 THEN 'Low stock'	
        WHEN  PRODUCT_QUANTITY_AVAIL BETWEEN 16 and 50 THEN 'In stock'
        WHEN  PRODUCT_QUANTITY_AVAIL&gt;=51 THEN 'Enough  stock'
        WHEN PRODUCT_QUANTITY_AVAIL=0 THEN 'Out of stock'
	    END
	 )
END PRODUCT_STATUS	
FROM  PRODUCT_CLASS pr JOIN product p ON pr.PRODUCT_CLASS_CODE=p.PRODUCT_CLASS_CODE;	

================================================================================================================================================================
----3.	Write a query to Show the count of cities in all countries other than USA &amp; MALAYSIA, with more than 1 city, in the descending order of CITIES. 

SELECT COUNTRY,count(CITY) as COUNT_CITY from ADDRESS
WHERE COUNTRY!='USA' and COUNTRY!='Malaysia'
GROUP BY COUNTRY
HAVING COUNT_CITY&gt;1
ORDER BY COUNT_CITY DESC;

=================================================================================================================================================================
 --4.	Write a query to display the customer_id,customer full name ,city,pincode,and 
 ------order details (order id,order date, product class desc, product desc, subtotal(product_quantity * product_price)) 
 ------for orders shipped to cities whose pin codes do not have any 0s in them. Sort the output on customer name, order date and subtotal
 
 
SELECT   a.CUSTOMER_ID,
	      (CUSTOMER_FNAME||' '||CUSTOMER_LNAME) as CUSTOMER_NAME,
		  b.CITY,
	      b.PINCODE,
	      c.ORDER_ID,
		  (d.PRODUCT_QUANTITY*e.PRODUCT_PRICE) AS SUBTOTAL,
	      f.PRODUCT_CLASS_DESC,
	      e.PRODUCT_DESC
FROM
	ONLINE_CUSTOMER AS a JOIN ADDRESS AS b ON a.ADDRESS_ID = b.ADDRESS_ID
    JOIN ORDER_HEADER AS c ON a.CUSTOMER_ID = c.CUSTOMER_ID 
	JOIN ORDER_ITEMS AS d ON c.ORDER_ID = d.ORDER_ID 
	JOIN PRODUCT AS e ON d.PRODUCT_ID = e.PRODUCT_ID
	JOIN PRODUCT_CLASS AS f ON e.PRODUCT_CLASS_CODE = f.PRODUCT_CLASS_CODE
WHERE b.PINCODE NOT LIKE '%0%' AND c.ORDER_STATUS='Shipped'
ORDER BY a.CUSTOMER_FNAME,c.ORDER_DATE,SUBTOTAL;
===========================================================================================================================================================================
-----5.	Write a Query to display product id,product description,totalquantity(sum(product quantity) 
-----for an item which has been bought maximum no. of times along with product id 201.

SELECT * FROM (SELECT a.PRODUCT_ID,PRODUCT_DESC,SUM(product_quantity) AS TOTAL_QUANTITY 
         FROM ORDER_ITEMS a JOIN PRODUCT b ON a.product_id=b.product_id GROUP by a.PRODUCT_ID ORDER BY total_quantity DESC LIMIT 1 );
============================================================================================================================================================================
----6.	Write a query to display the customer_id,customer name, email and order details (order id, product desc,product qty, 
----subtotal(product_quantity * product_price)) for all customers even if they have not ordered any item


SELECT a.CUSTOMER_ID,
       (CUSTOMER_FNAME||' '||CUSTOMER_LNAME) as CUSTOMER_NAME,
       a.CUSTOMER_EMAIL, 
	   b.ORDER_ID,
	   c.PRODUCT_DESC,
	   d.PRODUCT_QUANTITY,
	   (d.PRODUCT_QUANTITY*c.PRODUCT_PRICE) as SUBTOTAL 
FROM ONLINE_CUSTOMER as a LEFT JOIN ORDER_HEADER as b on b.CUSTOMER_ID = a.CUSTOMER_ID
                          LEFT JOIN ORDER_ITEMS as d on d.ORDER_ID = b.ORDER_ID
                          LEFT JOIN PRODUCT as c on c.PRODUCT_ID = d.PRODUCT_ID;
						  
*******************************************************************END*********************************************************************************************************


											 


</sql><current_tab id="0"/></tab_sql></sqlb_project>
